#define buzzer A5

#define NOTE_C5  523
#define NOTE_CS5 554
#define NOTE_D5  587
#define NOTE_DS5 622
#define NOTE_E5  659
#define NOTE_F5  698
#define NOTE_FS5 740
#define NOTE_G5  784
#define NOTE_GS5 831
#define NOTE_A5  880
#define NOTE_AS5 932
#define NOTE_B5  988
#define NOTE_C6  1047
#define NOTE_CS6 1109
#define NOTE_D6  1175
#define NOTE_DS6 1245
#define NOTE_E6  1319
#define NOTE_F6  1397
#define NOTE_FS6 1480
#define NOTE_G6  1568
#define NOTE_GS6 1661
#define NOTE_A6  1760
#define NOTE_AS6 1865
#define NOTE_B6  1976


#define sb 13//soundBuzzer
#define btn1 7//button
#define btn2 8//button

//funções
void play_soft_kitty(void);
void play_do_re_mi(void);
void apaga_led(void);
void tocaMusica(int * vetorNotas, int * vetorDelays,int qtdeNotas);

void playSilentNight();
void playDeckTheHalls();
void playJingleBell();

void setup() {
  
  pinMode(sb, OUTPUT);
  pinMode(btn1, INPUT);
  pinMode(btn2, INPUT);
}

void loop() {
 
    playDeckTheHalls();

    noTone(sb);//garante que o buzzer não vai receber nenhum lixo
  delay(3000);
  
  playJingleBell();

    noTone(sb);//garante que o buzzer não vai receber nenhum lixo
  delay(3000);
  
}


void playJingleBell(){
  //Notas B5,D6,G5,A5,C6,D5,E5,AS5
  int notas[] = {NOTE_B5,NOTE_B5,NOTE_B5,NOTE_B5,NOTE_B5,NOTE_B5,NOTE_B5,NOTE_D6,NOTE_G5,NOTE_A5,NOTE_B5,NOTE_C6,NOTE_C6,NOTE_C6,NOTE_B5,NOTE_B5,NOTE_B5,NOTE_A5,NOTE_B5,NOTE_A5,NOTE_B5,NOTE_A5,NOTE_D6,NOTE_B5,NOTE_B5,NOTE_B5,NOTE_B5,NOTE_B5,NOTE_B5,NOTE_B5,NOTE_D6,NOTE_G5,NOTE_A5,NOTE_B5,NOTE_C6,NOTE_C6,NOTE_C6,NOTE_B5,NOTE_B5,NOTE_B5,NOTE_B5,NOTE_D6,NOTE_D6,NOTE_C6,NOTE_A5,NOTE_G5,NOTE_D5,NOTE_B5,NOTE_A5,NOTE_G5,NOTE_D5,NOTE_D5,NOTE_D5,NOTE_B5,NOTE_A5,NOTE_G5,NOTE_E5,NOTE_E5,NOTE_E5,NOTE_C6,NOTE_B5,NOTE_A5,NOTE_D6,NOTE_D6,NOTE_D6,NOTE_E6,NOTE_D6,NOTE_A5,NOTE_C6,NOTE_B5,NOTE_D5,NOTE_B5,NOTE_A5,NOTE_G5,NOTE_D5,NOTE_D5,NOTE_D5,NOTE_B5,NOTE_A5,NOTE_G5,NOTE_E5,NOTE_E5,NOTE_E5,NOTE_C6,NOTE_B5,NOTE_A5,NOTE_D6,NOTE_D6,NOTE_D6,NOTE_E6,NOTE_D6,NOTE_A5,NOTE_AS5,NOTE_B5};
  int delays[] = {300,300,500,300,300,600,400,300,200,300,600,300,300,400,300,300,600,400,300,300,200,400,600,300,300,500,300,300,600,400,300,200,300,600,300,300,400,300,300,300,400,400,300,300,200,600,300,300,400,300,500,700,300,300,400,300,500,700,300,300,400,300,400,400,300,300,300,400,300,800,300,300,400,300,500,700,300,300,400,300,500,700,300,300,400,300,400,400,300,300,300,400,300,800};
  tocaMusica(notas, delays, 94 );
  
}

void playDeckTheHalls(){
  //Notas C6,AS5,A5,G5,F5,B5,D6,E6,F6
  int notas[] = {NOTE_C6,NOTE_AS5,NOTE_A5,NOTE_G5,NOTE_F5,NOTE_G5,NOTE_A5,NOTE_F5,NOTE_G5,NOTE_A5,NOTE_AS5,NOTE_G5,NOTE_A5,NOTE_G5,NOTE_F5,NOTE_E5,NOTE_F5,NOTE_C6,NOTE_AS5,NOTE_A5,NOTE_G5,NOTE_F5,NOTE_G5,NOTE_A5,NOTE_F5,NOTE_G5,NOTE_A5,NOTE_AS5,NOTE_G5,NOTE_A5,NOTE_G5,NOTE_F5,NOTE_E5,NOTE_F5,NOTE_G5,NOTE_A5,NOTE_AS5,NOTE_G5,NOTE_A5,NOTE_AS5,NOTE_C6,NOTE_G5,NOTE_A5,NOTE_B5,NOTE_C6,NOTE_D6,NOTE_E6,NOTE_F6,NOTE_E6,NOTE_D6,NOTE_C6,NOTE_C6,NOTE_AS5,NOTE_A5,NOTE_G5,NOTE_F5,NOTE_G5,NOTE_A5,NOTE_F5,NOTE_D6,NOTE_D6,NOTE_D6,NOTE_D6,NOTE_C6,NOTE_AS5,NOTE_A5,NOTE_G5,NOTE_F5};
  int delays[] = {400,500,400,300,300,300,300,500,300,300,300,300,500,300,300,500,500,350,450,350,250,300,300,300,500,300,300,300,300,500,300,300,500,500,300,300,400,300,400,300,300,500,300,400,400,400,500,300,300,400,500,400,500,400,300,300,300,300,500,300,300,300,300,500,300,300,500,400};
  tocaMusica(notas, delays,68 );
  
}

void playSilentNight(){
  //Notas G5,A5,E5,D6,B5,C6,F6,E6,C5,F5,D5
  int notas[] = {NOTE_G5,NOTE_A5,NOTE_G5,NOTE_E5,NOTE_G5,NOTE_A5,NOTE_G5,NOTE_E5,NOTE_D6,NOTE_D6,NOTE_B5,NOTE_C6,NOTE_C6,NOTE_G5,NOTE_A5,NOTE_A5,NOTE_C6,NOTE_B5,NOTE_A5,NOTE_G5,NOTE_A5,NOTE_G5,NOTE_E5,NOTE_A5,NOTE_A5,NOTE_C6,NOTE_B5,NOTE_A5,NOTE_G5,NOTE_A5,NOTE_G5,NOTE_E5,NOTE_D6,NOTE_D6,NOTE_F6,NOTE_D6,NOTE_B5,NOTE_C6,NOTE_E6,NOTE_C5,NOTE_G5,NOTE_E5,NOTE_G5,NOTE_F5,NOTE_D5,NOTE_C5};
  int delays[] = {800,400,400,1300,800,400,400,1300,800,600,1300,800,600,1300,800,600,800,500,500,800,500,500,800,800,600,800,500,500,800,500,500,100,600,600,800,600,500,100,100,600,600,800,600,500,800,1000};
  tocaMusica(notas, delays,46 );
  
}


void tocaMusica(int * vetorNotas, int * vetorDelays,int qtdeNotas){
  for (int c = 0; c< qtdeNotas; c++){
    vetorNotas[c] == 0 ? noTone(sb) :  tone (sb, vetorNotas[c], vetorDelays[c]);
    delay(vetorDelays[c]);
    
  }
}
